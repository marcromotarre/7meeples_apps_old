{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from 'next-connect';\nimport notes from '../../../src/data/data';\nconst handler = nc().get((req, res) => {\n  res.json({\n    data: notes\n  });\n}).post((req, res) => {\n  const note = _objectSpread(_objectSpread({}, req.body), {}, {\n    id: Date.now()\n  });\n\n  notes.push(note);\n  res.json({\n    data: note\n  });\n});\nexport default handler;","map":{"version":3,"sources":["/Users/marcromotarre/Documents/react/7meeples_shop/pages/api/note/index.js"],"names":["nc","notes","handler","get","req","res","json","data","post","note","body","id","Date","now","push"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,OAAO,GAAGF,EAAE,GACbG,GADW,CACP,CAACC,GAAD,EAAKC,GAAL,KAAa;AACdA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAEN;AAAP,GAAT;AACH,CAHW,EAIXO,IAJW,CAIN,CAACJ,GAAD,EAAKC,GAAL,KAAa;AACf,QAAMI,IAAI,mCACHL,GAAG,CAACM,IADD;AAENC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFE,IAAV;;AAIAZ,EAAAA,KAAK,CAACa,IAAN,CAAWL,IAAX;AACAJ,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAEE;AAAP,GAAT;AACH,CAXW,CAAhB;AAaA,eAAeP,OAAf","sourcesContent":["import nc from 'next-connect'\nimport notes from '../../../src/data/data'\n\nconst handler = nc()\n    .get((req,res) => {\n        res.json({data: notes})\n    })\n    .post((req,res) => {\n        const note= {\n            ...req.body,\n            id: Date.now()\n        }\n        notes.push(note)\n        res.json({data: note})\n    })\n\nexport default handler"]},"metadata":{},"sourceType":"module"}